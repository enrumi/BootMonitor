name: Build iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    name: Сборка iOS приложения
    runs-on: macos-latest

    steps:
    - name: Checkout кода
      uses: actions/checkout@v4

    - name: Установка утилит
      run: |
        brew install xcbeautify jq

    - name: Определение параметров проекта
      run: |
        PROJECT_FILE=$(find . -d 1 -name "*.xcodeproj" | head -n 1)
        if [ -z "$PROJECT_FILE" ]; then
          echo "Xcode project not found"
          exit 1
        fi
        PROJECT_NAME=$(basename "$PROJECT_FILE" .xcodeproj)
        echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV

        SCHEME_NAME=$(xcodebuild -project "$PROJECT_FILE" -list -json | jq -r '.project.schemes[0]')
        echo "SCHEME_NAME=$SCHEME_NAME" >> $GITHUB_ENV

    - name: Сборка и архивирование приложения (без подписи)
      run: |
        rm -rf ~/Library/Developer/Xcode/DerivedData

        xcodebuild archive \
          -project "$PROJECT_NAME.xcodeproj" \
          -scheme "$SCHEME_NAME" \
          -configuration Release \
          -archivePath "$PROJECT_NAME.xcarchive" \
          -sdk iphoneos \
          -destination 'generic/platform=iOS' \
          -derivedDataPath derived_data \
          CODE_SIGNING_ALLOWED=NO \
          | xcbeautify

        if [ ! -d "$PROJECT_NAME.xcarchive" ]; then
          echo "Archive not created"
          exit 1
        fi

    - name: Экспорт IPA файла (без подписи)
      run: |
        # Создание exportOptions.plist для неподписанного приложения
        echo '<?xml version="1.0" encoding="UTF-8"?>' > exportOptions.plist
        echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> exportOptions.plist
        echo '<plist version="1.0">' >> exportOptions.plist
        echo '<dict>' >> exportOptions.plist
        echo '    <key>method</key>' >> exportOptions.plist
        echo '    <string>development</string>' >> exportOptions.plist
        echo '    <key>compileBitcode</key>' >> exportOptions.plist
        echo '    <false/>' >> exportOptions.plist
        echo '    <key>thinning</key>' >> exportOptions.plist
        echo '    <string><none></string>' >> exportOptions.plist
        echo '</dict>' >> exportOptions.plist
        echo '</plist>' >> exportOptions.plist

        xcodebuild -exportArchive \
          -archivePath "$PROJECT_NAME.xcarchive" \
          -exportPath . \
          -exportOptionsPlist exportOptions.plist \
          | xcbeautify

        if [ ! -f "$PROJECT_NAME.ipa" ]; then
          echo "IPA file not created"
          exit 1
        fi

    - name: Создание GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version || format('v{0}', github.run_number) }}
        release_name: Release ${{ github.event.inputs.version || format('v{0}', github.run_number) }}
        draft: false
        prerelease: false

    - name: Загрузка IPA в Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.PROJECT_NAME }}.ipa
        asset_name: ${{ env.PROJECT_NAME }}.ipa
        asset_content_type: application/octet-stream

    - name: Загрузка архива в Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.PROJECT_NAME }}.xcarchive
        asset_name: ${{ env.PROJECT_NAME }}.xcarchive
        asset_content_type: application/octet-stream
